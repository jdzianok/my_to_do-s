{"version":3,"sources":["assets/header_icon.svg","assets/delete.svg","assets/delete_grey.svg","assets/ok_black.svg","assets/ok_white.svg","assets/todo.svg","assets/todo_done.svg","assets/arrow_right.svg","components/Header.js","components/Task.js","components/TaskList.js","components/AddTask.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","icon","alt","Task","task","deleteTask","change","text","date","id","active","finishDate","doneIcon","onClick","ok_black","ok_white","deleteIcon","deleteBtn","deleteBtnGrey","finish","Date","toISOString","slice","deadline","taskName","TaskList","tasks","filter","done","sort","a","b","activeTaskList","map","key","doneTaskList","toDo","length","toDo_done","AddTask","minDate","state","taskError","taskDate","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","addTask","maxDate","this","onSubmit","type","onChange","htmlFor","min","max","required","arrow","Component","App","counter","index","findIndex","splice","changeTaskStatus","forEach","getTime","prevState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af43e8ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header_icon.46423251.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.7e779ad2.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete_grey.618eac37.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_black.e9f9408d.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_white.61973caf.svg\";","module.exports = __webpack_public_path__ + \"static/media/todo.48863657.svg\";","module.exports = __webpack_public_path__ + \"static/media/todo_done.1df3b4ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_right.d2d23c9f.svg\";","import React from \"react\";\nimport icon from \"../assets/header_icon.svg\";\n\nconst Header = () => {\n  return (\n    <div className=\"headerContainer\">\n      <img src={icon} alt=\"arrow\" />\n      <h1>my to doâ€™s</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport deleteBtn from \"../assets/delete.svg\";\nimport deleteBtnGrey from \"../assets/delete_grey.svg\";\nimport ok_black from \"../assets/ok_black.svg\";\nimport ok_white from \"../assets/ok_white.svg\";\n\nconst Task = ({ task, deleteTask, change }) => {\n  const { text, date, id, active, finishDate } = task;\n\n  //display elements conditions\n\n  const doneIcon = active ? (\n    <span className=\"doneTaskBtnActive\" onClick={() => change(id)}>\n      <img src={ok_black} alt=\"ok\"></img>\n    </span>\n  ) : (\n    <span className=\"doneTaskBtn\">\n      <img src={ok_white} alt=\"ok\"></img>\n    </span>\n  );\n\n  const deleteIcon = active ? (\n    <img src={deleteBtn} alt=\"X\" />\n  ) : (\n    <img src={deleteBtnGrey} alt=\"X\" />\n  );\n\n  const finish = new Date(finishDate).toISOString().slice(0, 10);\n\n  const deadline = active ? (\n    <span>deadline {date}</span>\n  ) : (\n    <span>finished {finish}</span>\n  );\n\n  const taskName = active ? (\n    <p className=\"taskName\" onClick={() => change(id)}>\n      {text} <span className=\"deadlineDate\">({deadline})</span>\n    </p>\n  ) : (\n    <p className=\"taskName\">\n      {text} <span className=\"deadlineDate\">({deadline})</span>\n    </p>\n  );\n\n  return (\n    <div className={active ? \"singleTask\" : \"singleTask singleTask--done\"}>\n      {doneIcon}\n      {taskName}\n      <button className=\"deleteTaskBtn\" onClick={() => deleteTask(id)}>\n        {deleteIcon}\n      </button>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"./Task\";\nimport toDo from \"../assets/todo.svg\";\nimport toDo_done from \"../assets/todo_done.svg\";\n// import { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nconst TaskList = ({ tasks, deleteTask, change }) => {\n  //creatin collection of active and done tasks\n\n  const active = tasks.filter(task => task.active);\n  const done = tasks.filter(task => !task.active);\n\n  //sorting methods\n\n  active.sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return dateA - dateB;\n  });\n\n  done.sort((a, b) => a.finishDate - b.finishDate);\n\n  //creating particular task lists\n\n  const activeTaskList = active.map(task => (\n    <Task key={task.id} task={task} deleteTask={deleteTask} change={change} />\n  ));\n  const doneTaskList = done.map(task => (\n    <Task key={task.id} task={task} deleteTask={deleteTask} change={change} />\n  ));\n\n  return (\n    <div className=\"tasksContainer\">\n      <div className=\"activeTasks\">\n        <div className=\"title\">\n          <img src={toDo} alt=\"\" />\n          <span className=\"text\">to do</span>\n        </div>\n        {activeTaskList.length > 0 ? activeTaskList : null}\n      </div>\n      <div className=\"doneTasks\">\n        <div className=\"title title--done\">\n          <img src={toDo_done} alt=\"\" />\n          <span className=\"text\">done ({done.length})</span>\n        </div>\n        {doneTaskList.length > 0 ? doneTaskList : null}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport arrow from \"../assets/arrow_right.svg\";\n\nclass AddTask extends Component {\n  minDate = new Date().toISOString().slice(0, 10);\n  state = {\n    text: \"\",\n    taskError: false,\n    taskDate: this.minDate\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { text, taskDate } = this.state;\n    if (text.length > 2) {\n      const addTask = this.props.addTask(text, taskDate);\n      if (addTask) {\n        this.setState({\n          text: \"\",\n          taskError: false,\n          taskDate: this.minDate\n        });\n      }\n    } else {\n      this.setState({ taskError: true });\n    }\n  };\n\n  render() {\n    //max date doesn't work, don't know why (?)\n    let maxDate = this.minDate.slice(0, 4) * 1 + 4;\n    maxDate = maxDate + \"-31-12\";\n\n    return (\n      <form className=\"addTaskForm\" onSubmit={this.handleSubmit}>\n        <div className=\"taskContainer\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            className=\"taskInput\"\n            value={this.state.text}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"task\" className=\"taskLabel\">\n            what\n          </label>\n          {this.state.taskError ? (\n            <p className=\"error\">Wpisz conajmniej 3 znaki</p>\n          ) : null}\n        </div>\n        <div className=\"taskContainer\">\n          <input\n            type=\"date\"\n            name=\"taskDate\"\n            min={this.minDate}\n            max={maxDate}\n            className=\"dateInput\"\n            value={this.state.taskDate}\n            required\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"task\" className=\"dateLabel\">\n            deadline\n          </label>\n        </div>\n        <div className=\"addTaskContainer\">\n          <button className=\"addTaskBtn\">\n            <span className=\"addTaskText\">add it</span>\n            <img src={arrow} alt=\"arrow\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AddTask;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport TaskList from \"./TaskList\";\nimport AddTask from \"./AddTask\";\n\nclass App extends Component {\n  counter = 4;\n  state = {\n    tasks: [\n      {\n        id: 0,\n        text: \"wash the car\",\n        date: \"2020-09-15\",\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 1,\n        text: \"buying a present\",\n        date: \"2020-07-09\",\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 2,\n        text: \"feed the cat\",\n        date: \"2020-04-03\",\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 3,\n        text: \"learn redux\",\n        date: \"2020-05-30\",\n        active: true,\n        finishDate: null\n      }\n    ]\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  deleteTask = id => {\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex(task => task.id === id);\n    tasks.splice(index, 1);\n\n    this.setState({ tasks });\n  };\n\n  changeTaskStatus = id => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n\n    this.setState({ tasks });\n  };\n\n  addTask = (text, date) => {\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      active: true,\n      finishDate: null\n    };\n    this.counter++;\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }));\n\n    return true;\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <AddTask addTask={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          deleteTask={this.deleteTask}\n          change={this.changeTaskStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./scss/main.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}